### YamlMime:ManagedReference
items:
- uid: "com.microsoft.samples.subpackage.CustomException"
  id: "CustomException"
  parent: "com.microsoft.samples.subpackage"
  children:
  - "com.microsoft.samples.subpackage.CustomException.CustomException(java.lang.String)"
  - "com.microsoft.samples.subpackage.CustomException.makeSomething()"
  langs:
  - "java"
  name: "CustomException"
  nameWithType: "CustomException"
  fullName: "com.microsoft.samples.subpackage.CustomException"
  type: "Class"
  package: "com.microsoft.samples.subpackage"
  syntax:
    content: "public class CustomException extends Exception"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Throwable"
  - "java.lang.Exception"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  - "java.lang.Throwable.fillInStackTrace()"
  - "java.lang.Throwable.getCause()"
  - "java.lang.Throwable.getLocalizedMessage()"
  - "java.lang.Throwable.getMessage()"
  - "java.lang.Throwable.getStackTrace()"
  - "java.lang.Throwable.getSuppressed()"
  - "java.lang.Throwable.initCause(java.lang.Throwable)"
  - "java.lang.Throwable.printStackTrace()"
  - "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  - "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  - "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  - "java.lang.Throwable.toString()"
- uid: "com.microsoft.samples.subpackage.CustomException.CustomException(java.lang.String)"
  id: "CustomException(java.lang.String)"
  parent: "com.microsoft.samples.subpackage.CustomException"
  langs:
  - "java"
  name: "CustomException(String message)"
  nameWithType: "CustomException.CustomException(String message)"
  fullName: "com.microsoft.samples.subpackage.CustomException.CustomException(String message)"
  overload: "com.microsoft.samples.subpackage.CustomException.CustomException*"
  type: "Constructor"
  package: "com.microsoft.samples.subpackage"
  syntax:
    content: "public CustomException(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
- uid: "com.microsoft.samples.subpackage.CustomException.makeSomething()"
  id: "makeSomething()"
  parent: "com.microsoft.samples.subpackage.CustomException"
  langs:
  - "java"
  name: "makeSomething()"
  nameWithType: "CustomException.makeSomething()"
  fullName: "com.microsoft.samples.subpackage.CustomException.makeSomething()"
  overload: "com.microsoft.samples.subpackage.CustomException.makeSomething*"
  type: "Method"
  package: "com.microsoft.samples.subpackage"
  summary: "We need to have such method that throw exception declared in the same class"
  syntax:
    content: "public void makeSomething()"
  exceptions:
  - type: "com.microsoft.samples.subpackage.CustomException"
    description: "with reason message"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.samples.subpackage.CustomException.CustomException*"
  name: "CustomException"
  nameWithType: "CustomException.CustomException"
  fullName: "com.microsoft.samples.subpackage.CustomException.CustomException"
  package: "com.microsoft.samples.subpackage"
- uid: "com.microsoft.samples.subpackage.CustomException.makeSomething*"
  name: "makeSomething"
  nameWithType: "CustomException.makeSomething"
  fullName: "com.microsoft.samples.subpackage.CustomException.makeSomething"
  package: "com.microsoft.samples.subpackage"
- uid: "java.lang.Exception"
  name: "Exception"
  nameWithType: "Exception"
  fullName: "java.lang.Exception"
